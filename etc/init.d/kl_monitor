#!/bin/bash

### BEGIN INIT INFO
### END INIT INFO

RED="\\e[31m"
GREEN="\\e[32m"
YELLOW="\\e[33m"
BLACK="\\e[0m"
POS="\\e[60G"

# the pid file is generated by install wizard
PORT=4001
ROOT="./"
APP="./kaloon.monitor"
CONFIG="./monitor.conf"
SYSLOG="./sys.log"

ok_msg(){
    echo -e "${1}${POS}${BLACK}[${GREEN}  OK  ${BLACK}]"
}

failed_msg(){
    echo -e "${1}${POS}${BLACK}[${RED}FAILED${BLACK}]"
}

# set variable $monitor_id
# 0, if process exists.
# 1, error.
check_process() {
    monitor_id=`ps aux|grep kaloon| grep monitor | grep conf|grep ${PORT}|awk 'NR==1 {print $2}'`
    echo $monitor_id
    if [[ -z $monitor_id ]]; then return 1; fi

    ps -p ${monitor_id}>/dev/null;

    return $?;
}

start() {
    # if exists, exit.
    check_process
    if [[ 0 -eq $? ]]; then
        failed_msg "kaloon.monitor started(pid ${monitor_id}), should not start it again."
        return 0
    fi

    # not exists, start server
    ok_msg "Starting kaloon.monitor..."
    old_pwd=`pwd`;
    cd ${ROOT}; nohup ${APP} -conf ${CONFIG} 2>${SYSLOG} 1>${SYSLOG} &
    cd ${old_pwd}

    # wait for some time.
    sleep 3

    # check again after start server
    check_process
    if [[ 0 -eq $? ]]; then
        ok_msg "kaloon.monitor started(pid ${monitor_id})"
    else
        failed_msg "kaloon.monitor not started"
    fi
}

stop() {
    # not start, exit
    check_process
    if [[ 1 -eq $? ]]; then
        failed_msg "kaloon.monitor not start."
        return 0
    fi

    ok_msg "Stopping kaloon.monitor(pid ${monitor_id})..."

    # process exists, kill util stop
    for((;;)); do
        check_process
        if [[ 0 -eq $? ]]; then
            kill -s SIGKILL ${monitor_id} 2>/dev/null
            ret=$?; if [[ 0 -ne $ret ]]; then failed_msg "send signal SIGKILL failed ret=$ret"; return $ret; fi
            sleep 0.1
        else
            ok_msg "kaloon.monitor stopped"
            break;
        fi
    done

    sleep 0.1
}

status() {
    check_process
    if [[ 0 -eq $? ]]; then
        echo "kaloon.monitor(pid ${monitor_id}) is running."
        return 0
    else
        echo "kaloon.monitor is stopped"
        return 1
    fi
}

menu() {
    case "$1" in
        start)
            start
            ;;
        stop)
            stop
            ;;
        restart)
            stop
            start
            ;;
        status)
            status
            ;;
        *)
            echo "Usage: $0 {start|stop|status|restart}"
            return 1
            ;;
    esac
}

menu $1
code=$?
#echo "code=${code}"
exit ${code}

